/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.dream.api;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.dream.model.AlbumQueryResponse;
import com.dream.model.PicturesQueryResponse;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-22T01:36:12.369Z")

@Api(value = "v1", description = "the v1 API", tags = { "相册", "图片" })
public interface PicAndAlbumV1Api {
	@ApiOperation(value = "创建相册", nickname = "v1AlbumCreatePost", notes = "创建相册", response = AlbumQueryResponse.class, tags = {
			"相册", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回状态", response = AlbumQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/Album/create", method = RequestMethod.POST)
	ResponseEntity<AlbumQueryResponse> v1AlbumCreatePost(
			@ApiParam(value = "相册名称") @Valid @RequestParam(value = "albumName", required = false) String albumName,
			@ApiParam(value = "相册标签列表") @Valid @RequestParam(value = "albumTags", required = false) List<String> albumTags,
			@ApiParam(value = "相册描述") @Valid @RequestParam(value = "albumDesc", required = false) String albumDesc,
			@ApiParam(value = "相册作者") @Valid @RequestParam(value = "albumAuthor", required = false) String albumAuthor,
			@ApiParam(value = "图片列表") @Valid @RequestParam(value = "picList", required = false) List<MultipartFile> picList);

	@ApiOperation(value = "查询相册", nickname = "v1AlbumIdDeletePost", notes = "根据相册id查询相册", response = AlbumQueryResponse.class, tags = {
			"相册", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回状态", response = AlbumQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/Album/{id}/delete", produces = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<AlbumQueryResponse> v1AlbumIdDeletePost(
			@ApiParam(value = "相册id", required = true) @PathVariable("id") String id);

	@ApiOperation(value = "查询相册", nickname = "v1AlbumIdSearchGet", notes = "根据相册id查询相册", response = AlbumQueryResponse.class, tags = {
			"相册", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回状态", response = AlbumQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/Album/{id}/search", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<AlbumQueryResponse> v1AlbumIdSearchGet(
			@ApiParam(value = "相册id", required = true) @PathVariable("id") String id);

	@ApiOperation(value = "查询相册", nickname = "v1AlbumSearchGet", notes = "根据相册id查询相册", response = AlbumQueryResponse.class, tags = {
			"相册", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回状态", response = AlbumQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/Album/search", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<AlbumQueryResponse> v1AlbumSearchGet(
			@NotNull @ApiParam(value = "页数", required = true) @Valid @RequestParam(value = "page", required = true) String page);

	@ApiOperation(value = "获取轮播图", nickname = "v1CarouselBatchQueryGet", notes = "通过查询mysql数据库获取轮播图", response = PicturesQueryResponse.class, tags = {
			"图片", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回图片的基本信息", response = PicturesQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/carousel/batch/query", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<PicturesQueryResponse> v1CarouselBatchQueryGet(
			@NotNull @ApiParam(value = "展示标记，0为轮播图展示，1为非展示", required = true) @Valid @RequestParam(value = "showflag", required = true) Integer showflag,
			@ApiParam(value = "页数") @Valid @RequestParam(value = "page", required = false) String page);

	@ApiOperation(value = "查询相册图片", nickname = "v1PicAlbumidSearchGet", notes = "列出相册图片", response = PicturesQueryResponse.class, tags = {
			"图片", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回相册下的图片列表", response = PicturesQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/pic/{albumid}/search", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<PicturesQueryResponse> v1PicAlbumidSearchGet(
			@ApiParam(value = "相册id列表,支持多个,以英文逗号分隔", required = true) @PathVariable("albumid") List<String> albumid,
			@ApiParam(value = "页数") @Valid @RequestParam(value = "page", required = false) String page);

	@ApiOperation(value = "插入图片", nickname = "v1PicInsertPost", notes = "插入图片", response = PicturesQueryResponse.class, tags = {
			"图片", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回图片的基本信息", response = PicturesQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/pic/insert", produces = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<PicturesQueryResponse> v1PicInsertPost(
			@ApiParam(value = "图片标题") @Valid @RequestParam(value = "title", required = false) String title,
			@ApiParam(value = "图片描述") @Valid @RequestParam(value = "desc", required = false) String desc,
			@ApiParam(value = "图片标签") @Valid @RequestParam(value = "tags", required = false) List<String> tags,
			@ApiParam(value = "所属相册") @Valid @RequestParam(value = "albumId", required = false) String albumId,
			@ApiParam(value = "图片") @Valid @RequestParam(value = "file", required = false) MultipartFile file);

	@ApiOperation(value = "查询相册图片", nickname = "v1PicSearchGet", notes = "列出相册图片", response = PicturesQueryResponse.class, tags = {
			"图片", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回相册下的图片列表", response = PicturesQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/pic/search", produces = { "application/json" }, method = RequestMethod.GET)
	ResponseEntity<PicturesQueryResponse> v1PicSearchGet(
			@ApiParam(value = "相册id列表,支持多个,以英文逗号分隔", required = true) @PathVariable("albumid") List<String> albumid,
			@ApiParam(value = "页数") @Valid @RequestParam(value = "page", required = false) String page);

	@ApiOperation(value = "根据图片id删除图片", nickname = "v1SingleIdDeletePost", notes = "根据图片id删除图片", response = PicturesQueryResponse.class, tags = {
			"图片", })
	@ApiResponses(value = { @ApiResponse(code = 200, message = "返回图片的基本信息", response = PicturesQueryResponse.class),
			@ApiResponse(code = 400, message = "错误请求信息"), @ApiResponse(code = 500, message = "服务器内部错误") })
	@RequestMapping(value = "/v1/single/{id}/delete", produces = { "application/json" }, method = RequestMethod.POST)
	ResponseEntity<PicturesQueryResponse> v1SingleIdDeletePost(
			@ApiParam(value = "", required = true) @PathVariable("id") String id);
}